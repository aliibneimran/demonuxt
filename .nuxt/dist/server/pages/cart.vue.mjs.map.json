{"file":"cart.vue.mjs","mappings":";;;;;;AA+EE,UAAM,WAAW,IAAI,CAAA,CAAE;AACvB,UAAM,mBAAmB,IAAI,CAAA,CAAE;AAC/B,UAAM,QAAQ,IAAI,CAAC;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/cart.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex h-full flex-col justify-center p-2\">\r\n      <!-- Table -->\r\n      <div class=\"mx-auto w-full rounded-sm border border-gray-200 bg-white shadow-lg\">\r\n        <header class=\"border-b border-gray-100 px-5 py-4\">\r\n          <div class=\"font-semibold text-gray-800\">Manage Carts</div>\r\n        </header>\r\n  \r\n        <div class=\"overflow-x-auto p-3\">\r\n          <table class=\"w-full table-auto\">\r\n            <thead class=\"bg-gray-50 text-xs font-semibold uppercase text-gray-400\">\r\n              <tr>\r\n                <th></th>\r\n                <th class=\"p-2\">\r\n                  <div class=\"text-left font-semibold\">Product Name</div>\r\n                </th>\r\n                <th class=\"p-2\">\r\n                  <div class=\"text-left font-semibold\">Quantity</div>\r\n                </th>\r\n                <th class=\"p-2\">\r\n                  <div class=\"text-left font-semibold\">Total</div>\r\n                </th>\r\n                <th class=\"p-2\">\r\n                  <div class=\"text-center font-semibold\">Action</div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody class=\"divide-y divide-gray-100 text-sm\">\r\n              <!-- Product Rows -->\r\n              <tr v-for=\"(product, index) in products\" :key=\"product.id\">\r\n                <td class=\"p-2\">\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    class=\"h-5 w-5\" \r\n                    :value=\"product.id\"\r\n                    v-model=\"selectedProducts\"\r\n                    @change=\"updateTotal(product.price, product.quantity, $event.target.checked)\"\r\n                  />\r\n                </td>\r\n                <td class=\"p-2\">\r\n                  <div class=\"font-medium text-gray-800\">{{ product.title }}</div>\r\n                </td>\r\n                <td class=\"p-2\">\r\n                  <div class=\"text-left\">{{ product.quantity }}</div>\r\n                </td>\r\n                <td class=\"p-2\">\r\n                  <div class=\"text-left font-medium text-green-500\">$ {{ (product.price * product.quantity).toFixed(2) }}</div>\r\n                </td>\r\n                <td class=\"p-2\">\r\n                  <div class=\"flex justify-center\">\r\n                    <button @click=\"removeProduct(index)\">\r\n                      <svg class=\"h-8 w-8 rounded-full p-1 hover:bg-gray-100 hover:text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n  \r\n        <!-- Total Amount -->\r\n        <div class=\"flex justify-end space-x-4 border-t border-gray-100 px-5 py-4 text-2xl font-bold\">\r\n          <div>Total</div>\r\n          <div class=\"text-blue-600\">$ {{ total.toFixed(2) }}</div>\r\n        </div>\r\n  \r\n        <div class=\"flex justify-end\">\r\n          <input type=\"hidden\" class=\"border border-black bg-gray-50\" :value=\"selectedProducts.join(',')\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  \r\n  const products = ref([]);\r\n  const selectedProducts = ref([]);\r\n  const total = ref(0);\r\n  \r\n  // Load cart from localStorage\r\n  onMounted(() => {\r\n    const storedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    products.value = storedCart;\r\n    selectedProducts.value = storedCart.map(item => item.id);\r\n    total.value = storedCart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  });\r\n  \r\n  const updateTotal = (price, quantity, isChecked) => {\r\n    const itemTotal = price * quantity;\r\n    if (isChecked) {\r\n      total.value += itemTotal;\r\n    } else {\r\n      total.value -= itemTotal;\r\n    }\r\n  };\r\n  \r\n  const removeProduct = (index) => {\r\n    const productId = products.value[index].id;\r\n    const product = products.value[index];\r\n  \r\n    const selectedIndex = selectedProducts.value.indexOf(productId);\r\n    if (selectedIndex > -1) {\r\n      selectedProducts.value.splice(selectedIndex, 1);\r\n      total.value -= product.price * product.quantity;\r\n    }\r\n  \r\n    products.value.splice(index, 1);\r\n    localStorage.setItem('cart', JSON.stringify(products.value));\r\n  };\r\n  </script>\r\n  "],"version":3}