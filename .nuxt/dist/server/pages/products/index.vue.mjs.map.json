{"file":"index.vue.mjs","mappings":";;;;;AAuDA,MAAM,eAAe;;;;;;AARrB,YAAQ,EAAE,OAAO,gBAAe,CAAE;AAGlC,UAAM,EAAE,MAAM,UAAU,QAAS,KAAS,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA;AAAA,MACxC;AAAA,MACF;AAAA,IAAA,CAAA;AAIA,UAAM,cAAc,IAAI,CAAC;AAEzB,UAAM,aAAa,SAAS,MAAM;AAChC,aAAO,SAAS,QAAQ,KAAK,KAAK,SAAS,MAAM,SAAS,YAAY,IAAI;AAAA,IAC5E,CAAC;AAED,UAAM,oBAAoB,SAAS,MAAM;AACvC,UAAI,CAAC,SAAS,MAAO,QAAO;AAC5B,YAAM,SAAS,YAAY,QAAQ,KAAK;AACxC,YAAM,MAAM,QAAQ;AACpB,aAAO,SAAS,MAAM,MAAM,OAAO,GAAG;AAAA,IACxC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;","names":["_withAsyncContext"],"sources":["../../../../../pages/products/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-4\">\r\n    <h1 class=\"text-center mb-6 text-2xl font-bold\">Products</h1>\r\n\r\n    <!-- Loader -->\r\n    <div v-if=\"pending\" class=\"text-center text-gray-500\">\r\n      <div class=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500 mx-auto\"></div>\r\n      <p class=\"mt-2\">Loading products...</p>\r\n    </div>\r\n\r\n    <!-- Product Grid -->\r\n    <div v-else class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n      <ProductCard \r\n        v-for=\"product in paginatedProducts\" \r\n        :key=\"product.id\" \r\n        :product=\"product\" \r\n      />\r\n    </div>\r\n    \r\n\r\n    <!-- Pagination -->\r\n    <div class=\"flex justify-center items-center gap-4 mt-8\">\r\n      <button\r\n        @click=\"prevPage\"\r\n        :disabled=\"currentPage === 1\"\r\n        class=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 transition-colors\"\r\n      >\r\n        Previous\r\n      </button>\r\n\r\n      <span class=\"px-4 py-2 font-medium\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n\r\n      <button\r\n        @click=\"nextPage\"\r\n        :disabled=\"currentPage >= totalPages\"\r\n        class=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 transition-colors\"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport ProductCard from \"@/components/ProductCard.vue\";\r\n\r\nuseHead({ title: \"Products Page\" });\r\n\r\n// Fetch all products\r\nconst { data: products, pending } = await useFetch(\r\n  \"https://fakestoreapi.com/products\"\r\n);\r\n\r\n// Pagination logic\r\nconst itemsPerPage = 4;\r\nconst currentPage = ref(1);\r\n\r\nconst totalPages = computed(() => {\r\n  return products.value ? Math.ceil(products.value.length / itemsPerPage) : 1;\r\n});\r\n\r\nconst paginatedProducts = computed(() => {\r\n  if (!products.value) return [];\r\n  const start = (currentPage.value - 1) * itemsPerPage;\r\n  const end = start + itemsPerPage;\r\n  return products.value.slice(start, end);\r\n});\r\n\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++;\r\n  }\r\n};\r\n\r\nconst prevPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--;\r\n  }\r\n};\r\n</script>"],"version":3}